{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/mkyzb/Documents/Programacao_e_Cia/crud-cipa/crud-cipa/frontend/src/app/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport Link from \"next/link\";\nimport TextField from \"@mui/material/TextField\";\nimport { Button, Card, Typography } from \"@mui/material\";\n\nexport default function Register() {\n  const router = useRouter();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const handleRegister = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!name || !email || !password || !confirmPassword) {\n      setError(\"Por favor, preencha todos os campos.\");\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setError(\"As senhas não coincidem.\");\n      return;\n    }\n\n    // Validação adicional da senha (reforço no lado do cliente)\n    const passwordRegex = /^(?=(?:.*[a-z]){2,})(?=(?:.*[A-Z]){2,})(?=(?:.*\\d){1,})(?=(?:.*[^A-Za-z0-9\\s]){2,}).{6,}$/;\n    if (!passwordRegex.test(password)) {\n      setError(\n        \"A senha deve ter no mínimo 6 caracteres, 2 letras maiúsculas, 2 letras minúsculas, 1 número e 2 caracteres especiais.\"\n      );\n      return;\n    }\n\n    try {\n      const response = await fetch(\"/api/register\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ name, email, password }),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Erro ao cadastrar. Tente novamente.\");\n      }\n\n      setError(\"\");\n      router.push(\"/login\");\n    } catch (err) {\n      if (err instanceof Error) {\n        setError(err.message);\n      } else {\n        setError(\"Ocorreu um erro desconhecido.\");\n      }\n    }\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"90vh\",\n      }}\n    >\n      <Card\n        variant=\"outlined\"\n        style={{ padding: \"20px\", maxWidth: \"400px\", margin: \"auto\" }}\n      >\n        <div style={{ paddingBottom: \"20px\" }}>\n          <Typography\n            variant=\"h3\"\n            sx={{\n              paddingBottom: \"20px\",\n              color: \"#006f83\",\n              fontWeight: \"bold\",\n            }}\n          >\n            Cadastro\n          </Typography>\n          <Typography variant=\"subtitle1\">\n            Preencha seus dados para criar uma conta\n          </Typography>\n        </div>\n\n        <form onSubmit={handleRegister}>\n          {/* Nome */}\n          <Typography\n            variant=\"h6\"\n            sx={{ position: \"relative\", top: \"10px\", color: \"#006f83\", fontWeight: \"bold\" }}\n          >\n            Nome Completo\n          </Typography>\n          <TextField\n            type=\"text\"\n            fullWidth\n            margin=\"normal\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n            required\n            sx={textFieldStyle}\n          />\n\n          {/* Email */}\n          <Typography\n            variant=\"h6\"\n            sx={{ position: \"relative\", top: \"10px\", color: \"#006f83\", fontWeight: \"bold\" }}\n          >\n            E-mail\n          </Typography>\n          <TextField\n            type=\"email\"\n            fullWidth\n            margin=\"normal\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            required\n            sx={textFieldStyle}\n          />\n\n          {/* Senha */}\n          <Typography\n            variant=\"h6\"\n            sx={{ position: \"relative\", top: \"10px\", color: \"#006f83\", fontWeight: \"bold\" }}\n          >\n            Senha\n          </Typography>\n          <TextField\n            type=\"password\"\n            fullWidth\n            margin=\"normal\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            required\n            slotProps={{\n              input: {\n                pattern:\n                  \"^(?=(?:.*[a-z]){2,})(?=(?:.*[A-Z]){2,})(?=(?:.*\\\\d){1,})(?=(?:.*[^A-Za-z0-9\\\\s]){2,}).{6,}$\",\n                title:\n                  \"A senha deve ter no mínimo 6 caracteres, 2 letras maiúsculas, 2 letras minúsculas, 1 número e 2 caracteres especiais.\",\n              },\n            }}\n            sx={textFieldStyle}\n          />\n\n          {/* Confirmar Senha */}\n          <Typography\n            variant=\"h6\"\n            sx={{ position: \"relative\", top: \"10px\", color: \"#006f83\", fontWeight: \"bold\" }}\n          >\n            Confirmar Senha\n          </Typography>\n          <TextField\n            type=\"password\"\n            fullWidth\n            margin=\"normal\"\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n            required\n            slotProps={{\n              input: {\n                title: \"Repita a senha informada acima.\",\n              },\n            }}\n            sx={textFieldStyle}\n          />\n\n          {/* Botão */}\n          <div style={{ padding: \"10px\" }}>\n            <Button\n              variant=\"contained\"\n              fullWidth\n              type=\"submit\"\n              sx={{\n                margin: \"auto\",\n                display: \"flex\",\n                justifyContent: \"center\",\n                background: \"#006f83\",\n                border: \"0\",\n                borderRadius: \"999px\",\n              }}\n            >\n              <Typography variant=\"inherit\" sx={{ color: \"#fff\", fontWeight: \"bold\" }}>\n                Cadastrar\n              </Typography>\n            </Button>\n          </div>\n\n          {/* Erro */}\n          <div style={{ padding: \"5px\", textAlign: \"center\" }}>\n            {error && <Typography sx={{ color: \"red\" }}>{error}</Typography>}\n          </div>\n        </form>\n\n        {/* Link para Login */}\n        <Typography sx={{ textAlign: \"center\", paddingTop: \"10px\" }}>\n          Já tem uma conta?{\" \"}\n          <Link href=\"/login\" style={{ textDecoration: \"none\" }}>\n            Faça login\n          </Link>\n        </Typography>\n      </Card>\n    </div>\n  );\n}\n\nconst textFieldStyle = {\n  backgroundColor: \"rgba(230, 230, 230, 1)\",\n  border: \"0\",\n  borderRadius: \"15px\",\n  \"& .MuiOutlinedInput-root\": {\n    \"& fieldset\": {\n      border: \"none\",\n    },\n  },\n};\n"],"names":[],"mappings":"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","debugId":null}}]
}